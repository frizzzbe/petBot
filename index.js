const TelegramBot = require("node-telegram-bot-api");
const fs = require("fs");
const { COMMANDS, DEFAULT_BUKASHKA, ADVENTURES } = require('./config/constants');
const {
  formatTimeLeft,
  formatMessage,
  calculateAge,
  getFeedResult,
  normalizeCommand,
} = require('./config/actions');
const BukashkaManager = require('./config/BukashkaManager');

require("dotenv").config();

const bot = new TelegramBot(process.env.API_KEY_BOT, {
  polling: true,
});

const bukashkaManager = new BukashkaManager(bot);

//–ú–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –¥–ª—è –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
const commands = [
  { command: "start", description: "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞" },
  { command: "help", description: "–†–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏" },
];

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
bot.setMyCommands(COMMANDS);

bot.on("text", async (msg) => {
  try {
    const normalizedText = normalizeCommand(msg.text);

    if (msg.text.startsWith("/start")) {
      await bot.sendMessage(msg.chat.id, `–í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞! üëãüèª`, {
        reply_markup: {
          keyboard: [
            ["‚≠êÔ∏è –í–∑—è—Ç—å –±—É–∫–∞—à–∫—É", "‚≠êÔ∏è –ü–æ–∫–æ—Ä–º–∏—Ç—å"],
            ["‚≠êÔ∏è –ú–æ—è –±—É–∫–∞—à–∫–∞", "‚ùì –ì–¥–µ –±—É–∫–∞—à–∫–∞"],
            ["üéí –ë—É–∫–∞—à–∫—É –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ"],
          ],
          resize_keyboard: true,
        },
      });
    } else if (msg.text === "/help" || normalizedText === "help") {
      const helpMessage = formatMessage(`–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: üêõ

/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥

–û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
‚≠êÔ∏è –í–∑—è—Ç—å –±—É–∫–∞—à–∫—É - –ó–∞–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
‚≠êÔ∏è –ü–æ–∫–æ—Ä–º–∏—Ç—å - –ü–æ–∫–æ—Ä–º–∏—Ç—å –≤–∞—à—É –±—É–∫–∞—à–∫—É
‚≠êÔ∏è –ú–æ—è –±—É–∫–∞—à–∫–∞ - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –ø–∏—Ç–æ–º—Ü–µ
‚≠êÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞ - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –¥–ª—è –≤–∞—à–µ–π –±—É–∫–∞—à–∫–∏
üéí –ë—É–∫–∞—à–∫—É –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫—É –≤ 6-—á–∞—Å–æ–≤–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ
‚ùì –ì–¥–µ –±—É–∫–∞—à–∫–∞ - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è
—Ä–∞–∑–¥–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫—É - –ü–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ø–∏—Ç–æ–º—Ü–∞

–í–∞–∂–Ω–æ: –ë—É–∫–∞—à–∫–∞ —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ —É—Ö–æ–¥–∞! –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –∫–æ—Ä–º–∏—Ç—å –µ—ë –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —É—Ä–æ–≤–Ω–µ–º —Å—á–∞—Å—Ç—å—è.`);

      await bot.sendMessage(msg.chat.id, helpMessage, {
        parse_mode: "MarkdownV2"
      });
    } else if (normalizedText === "–≤–∑—è—Ç—å –±—É–∫–∞—à–∫—É") {
      const userId = msg.from.id;
      if (bukashkaManager.getBukashka(userId)) {
        await bot.sendMessage(
          msg.chat.id,
          formatMessage("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –±—É–∫–∞—à–∫–∞! –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Å—Ç–∏ –Ω–æ–≤—É—é, —Å–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–¥–∞–≤–∏—Ç–µ —Ç–µ–∫—É—â—É—é."),
          { parse_mode: "MarkdownV2" }
        );
        return;
      }

      await bot.sendMessage(
        msg.chat.id,
        formatMessage("–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–≤–∞—Ç—å –≤–∞—à—É –±—É–∫–∞—à–∫—É?"),
        { parse_mode: "MarkdownV2" }
      );

      bot.once("message", async (nameMsg) => {
        const buakakaName = nameMsg.text;
        await bukashkaManager.createBukashka(userId, msg.chat.id, buakakaName, DEFAULT_BUKASHKA);

        await bot.sendMessage(
          msg.chat.id,
          formatMessage(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –±—É–∫–∞—à–∫–∞ –ø–æ –∏–º–µ–Ω–∏ ${buakakaName}! üéâ\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "–ø–æ–∫–æ—Ä–º–∏—Ç—å", —á—Ç–æ–±—ã –ø–æ–∫–æ—Ä–º–∏—Ç—å –≤–∞—à—É –±—É–∫–∞—à–∫—É.`),
          { parse_mode: "MarkdownV2" }
        );
      });
    } else if (normalizedText === "–ø–æ–∫–æ—Ä–º–∏—Ç—å") {
      const userId = msg.from.id;
      const bukashka = bukashkaManager.getBukashka(userId);
      if (!bukashka) {
        await bukashkaManager.emptyPetMsg(msg.chat.id);
        return;
      }

      if (bukashka.isAdventuring) {
        await bot.sendMessage(
          msg.chat.id,
          formatMessage("–í–∞—à–∞ –±—É–∫–∞—à–∫–∞ —Å–µ–π—á–∞—Å –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–∏ –∏ –Ω–µ –º–æ–∂–µ—Ç –µ—Å—Ç—å! –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –æ–Ω–∞ –≤–µ—Ä–Ω–µ—Ç—Å—è. üéí"),
          { parse_mode: "MarkdownV2" }
        );
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ 3 —Å–µ–∫—É–Ω–¥—ã —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ—Ä–º–ª–µ–Ω–∏—è
      const now = Date.now();
      const lastFeed = bukashkaManager.lastFeedTime[userId] || 0;

      if (now - lastFeed < 3000) {
        const remainingTime = Math.ceil((3000 - (now - lastFeed)) / 1000);
        await bot.sendMessage(
          msg.chat.id,
          formatMessage(`–ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ ${remainingTime} —Å–µ–∫. –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ—Ä–º–ª–µ–Ω–∏–µ–º! ‚è≥`),
          { parse_mode: "MarkdownV2" }
        );
        return;
      }

      try {
        const feedResult = getFeedResult(bukashka.name);

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ—Ä–º–ª–µ–Ω–∏—è
        bukashkaManager.lastFeedTime[userId] = now;

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—ã—Ç–æ—Å—Ç—å –∏ —Å—á–∞—Å—Ç—å–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        bukashka.feed = Math.max(0, Math.min(100, bukashka.feed + feedResult.amount));
        bukashka.happy = Math.max(0, Math.min(100, bukashka.happy + feedResult.happiness));

        try {
          await bot.sendMessage(msg.chat.id, formatMessage(feedResult.message), {
            parse_mode: "MarkdownV2",
          });
        } catch (error) {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
          await bot.sendMessage(msg.chat.id, feedResult.message.replace(/\\/g, ''));
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–º–µ—Ä–ª–∞ –ª–∏ –±—É–∫–∞—à–∫–∞ –æ—Ç –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ–π –µ–¥—ã
        if (bukashka.feed === 0 && feedResult.type === "–≥–æ–≤–Ω—è—à–∫–∞") {
          await bukashkaManager.killBukashka(userId, msg.chat.id, "–ü–æ–µ–ª–∞ –≥–æ–≤–Ω–∞ –∏ –ø–æ–º–µ—Ä–ª–∞ üò¢");
          return;
        }
      } catch (error) {
        await bot.sendMessage(msg.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ—Ä–º–ª–µ–Ω–∏–∏ –±—É–∫–∞—à–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
      }
    } else if (normalizedText === "–º–æ—è –±—É–∫–∞—à–∫–∞") {
      const userId = msg.from.id;
      const bukashka = bukashkaManager.getBukashka(userId);
      if (bukashka) {
        await bot.sendMessage(msg.chat.id, formatMessage(`
‚ú® –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π –±—É–∫–∞—à–∫–µ! üêõ

**–ò–º—è:** ${bukashka.name}  
**–í–æ–∑—Ä–∞—Å—Ç:** ${calculateAge(bukashka.creationDate)}  
**–£—Ä–æ–≤–µ–Ω—å:** ${bukashka.level}  
**–°—ã—Ç–æ—Å—Ç—å:** ${bukashka.feed} üå±  
**–°—á–∞—Å—Ç—å–µ:** ${bukashka.happy} üòä

–í–∞—à–∞ –±—É–∫–∞—à–∫–∞ –æ—á–µ–Ω—å —Ä–∞–¥–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å! üíñ
`), { parse_mode: "MarkdownV2" });
      } else {
        await bukashkaManager.emptyPetMsg(msg.chat.id);
      }
    } else if (normalizedText === "–±—É–∫–∞—à–∫—É –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ") {
      const userId = msg.from.id;
      const bukashka = bukashkaManager.getBukashka(userId);
      if (!bukashka) {
        await bukashkaManager.emptyPetMsg(msg.chat.id);
        return;
      }

      if (bukashkaManager.isInAdventure(userId)) {
        const timeLeft = bukashkaManager.getAdventureTimeLeft(userId);
        await bot.sendMessage(
          msg.chat.id,
          formatMessage(`–í–∞—à–∞ –±—É–∫–∞—à–∫–∞ ${bukashka.name} —É–∂–µ –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–∏! üéí\n\n–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: ${formatTimeLeft(timeLeft)}`),
          { parse_mode: "MarkdownV2" }
        );
        return;
      }

      if (bukashka.feed < 10) {
        const keyboard = {
          inline_keyboard: [
            [
              { text: "–†–∏—Å–∫–Ω—É—Ç—å", callback_data: "adventure_risk" },
              { text: "–û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data: "adventure_cancel" }
            ]
          ]
        };

        await bot.sendMessage(
          msg.chat.id,
          formatMessage(`‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –£—Ä–æ–≤–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏ –≤–∞—à–µ–π –±—É–∫–∞—à–∫–∏ —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏–π (–º–µ–Ω—å—à–µ 10). –ï—Å–ª–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –æ–∫–∞–∂–µ—Ç—Å—è –Ω–µ—É–¥–∞—á–Ω—ã–º, –±—É–∫–∞—à–∫–∞ –º–æ–∂–µ—Ç —É–º–µ—Ä–µ—Ç—å –æ—Ç –≥–æ–ª–æ–¥–∞!`),
          {
            parse_mode: "MarkdownV2",
            reply_markup: keyboard
          }
        );
        return;
      }

      await bukashkaManager.startAdventure(msg.chat.id, ADVENTURES);
    } else if (normalizedText === "–≥–¥–µ –±—É–∫–∞—à–∫–∞") {
      const userId = msg.from.id;
      const bukashka = bukashkaManager.getBukashka(userId);
      if (!bukashka) {
        await bukashkaManager.emptyPetMsg(msg.chat.id);
        return;
      }

      if (bukashkaManager.isInAdventure(userId)) {
        const timeLeft = bukashkaManager.getAdventureTimeLeft(userId);
        await bot.sendMessage(
          msg.chat.id,
          formatMessage(`–í–∞—à–∞ –±—É–∫–∞—à–∫–∞ ${bukashka.name} —Å–µ–π—á–∞—Å –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–∏! üéí\n\n–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: ${formatTimeLeft(timeLeft)}\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É "–ú–æ—è –±—É–∫–∞—à–∫–∞".`),
          { parse_mode: "MarkdownV2" }
        );
      } else {
        await bot.sendMessage(
          msg.chat.id,
          formatMessage(`–í–∞—à–∞ –±—É–∫–∞—à–∫–∞ ${bukashka.name} —Å–µ–π—á–∞—Å –¥–æ–º–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –Ω–æ–≤—ã–º –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º! üè†\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "–ë—É–∫–∞—à–∫—É –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ", —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—ë –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ.`),
          { parse_mode: "MarkdownV2" }
        );
      }
    } else if (normalizedText === "—Ä–∞–∑–¥–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫—É") {
      const userId = msg.from.id;
      if (bukashkaManager.getBukashka(userId)) {
        await bukashkaManager.killBukashka(userId, msg.chat.id, "—Ä–∞–∑–¥–∞–≤–ª–µ–Ω–∞ —Ö–æ–∑—è–∏–Ω–æ–º");
      } else {
        await bukashkaManager.emptyPetMsg(msg.chat.id);
      }
    } else {
      //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ
      const msgWait = await bot.sendMessage(
        msg.chat.id,
        `–ë–æ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç...`
      );

      //–ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º —Ç—É–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—ç—Ö–æ-–±–æ—Ç)
      setTimeout(async () => {
        await bot.editMessageText(msg.text, {
          chat_id: msgWait.chat.id,
          message_id: msgWait.message_id,
        });
      }, 2000);
    }
  } catch (error) {
    console.log(error);
  }
});

bot.on("photo", async (msg) => {
  try {
    const userId = msg.from.id;
    const photo = msg.photo[msg.photo.length - 1];
    const bukashka = bukashkaManager.getBukashka(userId);

    if (bukashka) {
      bukashka.image = photo.file_id;
      await bot.sendPhoto(msg.chat.id, photo.file_id, {
        caption: formatMessage(`
‚ú® –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π –±—É–∫–∞—à–∫–µ! üêõ

**–ò–º—è:** ${bukashka.name}  
**–í–æ–∑—Ä–∞—Å—Ç:** ${calculateAge(bukashka.creationDate)}  
**–£—Ä–æ–≤–µ–Ω—å:** ${bukashka.level}  
**–°—ã—Ç–æ—Å—Ç—å:** ${bukashka.feed} üå±  
**–°—á–∞—Å—Ç—å–µ:** ${bukashka.happy} üòä

–í–∞—à–∞ –±—É–∫–∞—à–∫–∞ –æ—á–µ–Ω—å —Ä–∞–¥–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å! üíñ
`),
        parse_mode: "MarkdownV2"
      });
    } else {
      await bukashkaManager.emptyPetMsg(msg.chat.id);
    }
  } catch (error) {
    console.log(error);
  }
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
bot.on('callback_query', async (query) => {
  const chatId = query.message.chat.id;
  const bukashka = bukashkaManager.getBukashka(chatId);

  if (!bukashka) {
    bot.answerCallbackQuery(query.id, { text: "–£ –≤–∞—Å –Ω–µ—Ç –±—É–∫–∞—à–∫–∏!" });
    return;
  }

  if (query.data === "adventure_risk") {
    bot.answerCallbackQuery(query.id);
    await bukashkaManager.startAdventure(chatId, ADVENTURES);
  } else if (query.data === "adventure_cancel") {
    bot.answerCallbackQuery(query.id);
    bot.deleteMessage(chatId, query.message.message_id);
    await bot.sendMessage(
      chatId,
      formatMessage(`–ë—É–∫–∞—à–∫–∞ ${bukashka.name} –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –∑–∞ –≤–∞—à—É –∑–∞–±–æ—Ç—É! ü•∞\n\n–õ—É—á—à–µ –ø–æ–¥–æ–∂–¥–∞—Ç—å, –ø–æ–∫–∞ –æ–Ω–∞ –Ω–∞–±–µ—Ä–µ—Ç—Å—è —Å–∏–ª, –∏ —Ç–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –≤–º–µ—Å—Ç–µ. üíñ`),
      { parse_mode: "MarkdownV2" }
    );
  }
});
