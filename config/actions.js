// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
const formatTimeLeft = (timeLeft) => {
  const days = Math.floor(timeLeft / (24 * 60 * 60));
  const hours = Math.floor((timeLeft % (24 * 60 * 60)) / (60 * 60));
  const minutes = Math.floor((timeLeft % (60 * 60)) / 60);
  const seconds = Math.floor(timeLeft % 60);

  if (days > 0) {
    return `${days} –¥–Ω. ${hours} —á.`;
  } else if (hours > 0) {
    return `${hours} —á. ${minutes} –º–∏–Ω.`;
  } else {
    return `${minutes} –º–∏–Ω. ${seconds} —Å–µ–∫.`;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ
const escapeMarkdown = (text) => {
  if (!text) return '';
  return text.replace(/[_*[\]()~`>#+=|{}.!-]/g, '\\$&').replace(/!/g, '\\!');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ MarkdownV2
const formatMessage = (text) => {
  if (!text) return '';

  // –°–ø–∏—Å–æ–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å
  const specialChars = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!'];

  // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª
  let result = text;
  specialChars.forEach(char => {
    const regex = new RegExp(`\\${char}`, 'g');
    result = result.replace(regex, `\\${char}`);
  });

  return result;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—É–∫–∞—à–∫–µ
const formatBukashkaInfo = (bukashka, feedChange = 0, happinessChange = 0) => {
  const feedDisplay = feedChange
    ? `${bukashka.feed} (${feedChange > 0 ? '+' : ''}${feedChange})`
    : bukashka.feed;

  const happinessDisplay = happinessChange
    ? `${bukashka.happy} (${happinessChange > 0 ? '+' : ''}${happinessChange})`
    : bukashka.happy;

  // –í—ã—á–∏—Å–ª—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –±—É–∫–∞—à–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  const now = new Date();
  const creationDate = new Date(bukashka.creationDate);
  const ageInSeconds = Math.floor((now - creationDate) / 1000);

  return formatMessage(`
‚ú® –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π –±—É–∫–∞—à–∫–µ! üêõ

**–ò–º—è:** ${bukashka.name}  
**–í–æ–∑—Ä–∞—Å—Ç:** ${formatTimeLeft(ageInSeconds)}  
**–£—Ä–æ–≤–µ–Ω—å:** ${bukashka.level}  
**–°—ã—Ç–æ—Å—Ç—å:** ${feedDisplay} üå±  
**–°—á–∞—Å—Ç—å–µ:** ${happinessDisplay} üòä

${feedChange || happinessChange
      ? "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–∫–æ—Ä–º–∏–ª–∏ –≤–∞—à—É –±—É–∫–∞—à–∫—É! üíñ"
      : "–í–∞—à–∞ –±—É–∫–∞—à–∫–∞ –æ—á–µ–Ω—å —Ä–∞–¥–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å! üíñ"
    }
  `);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—É–∫–∞—à–∫–µ
const sendBukashkaInfo = async (chatId, bukashka, feedChange = 0, happinessChange = 0, bot) => {
  const message = formatBukashkaInfo(bukashka, feedChange, happinessChange);

  if (bukashka.image) {
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ –±—É–∫–∞—à–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    await bot.sendPhoto(chatId, bukashka.image, {
      caption: message,
      parse_mode: "MarkdownV2",
    });
  } else {
    // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    await bot.sendMessage(chatId, message, {
      parse_mode: "MarkdownV2",
    });
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –±—É–∫–∞—à–∫–∏
const calculateAge = (creationDate) => {
  const now = new Date();
  const creation = new Date(creationDate);
  const ageDiff = now - creation;

  const minutes = Math.floor(ageDiff / (1000 * 60));
  const hours = Math.floor(minutes / 60);
  const days = Math.floor(hours / 24);

  if (days > 0) {
    const remainingHours = hours % 24;
    return `${days} –¥–Ω. ${remainingHours} —á.`;
  } else if (hours > 0) {
    const remainingMinutes = minutes % 60;
    return `${hours} —á. ${remainingMinutes} –º–∏–Ω.`;
  } else {
    return `${minutes} –º–∏–Ω.`;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫–æ—Ä–º–ª–µ–Ω–∏—è
const getFeedResult = (bukashkaName) => {
  const random = Math.random() * 100; // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100

  if (random < 5) {
    return {
      type: "–≥–æ–≤–Ω—è—à–∫–∞",
      amount: -5,
      happiness: -10,
      message: formatMessage(`üò± *–û –Ω–µ—Ç!* –í–∞—à–∞ ${bukashkaName} —Å–ª—É—á–∞–π–Ω–æ —Å—ä–µ–ª–∞ –≥–æ–≤–Ω—è—à–∫—É! üí©\n–°—ã—Ç–æ—Å—Ç—å —É–º–µ–Ω—å—à–∏–ª–∞—Å—å –Ω–∞ 5 üå±\n–°—á–∞—Å—Ç—å–µ —É–º–µ–Ω—å—à–∏–ª–æ—Å—å –Ω–∞ 10 üò¢`),
    };
  } else if (random < 60) {
    return {
      type: "–≤–æ–¥–∏—á–∫—É",
      amount: 5,
      happiness: 0,
      message: formatMessage(`${bukashkaName} –≤—ã–ø–∏–ª–∞ –≤–æ–¥–∏—á–∫—É üçΩÔ∏è\n–°—ã—Ç–æ—Å—Ç—å —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å –Ω–∞ 5 üå±`),
    };
  } else if (random < 90) {
    return {
      type: "–ª–∏—Å—Ç–∏–∫",
      amount: 10,
      happiness: 5,
      message: formatMessage(`${bukashkaName} —Å—ä–µ–ª–∞ –ª–∏—Å—Ç–∏–∫ üçΩÔ∏è\n–°—ã—Ç–æ—Å—Ç—å —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å –Ω–∞ 10 üå±\n–°—á–∞—Å—Ç—å–µ —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –Ω–∞ 5 üòä`),
    };
  } else {
    return {
      type: "—è–±–ª–æ—á–∫–æ",
      amount: 20,
      happiness: 15,
      message: formatMessage(`üéâ *–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ!* üéâ\n\n–í–∞—à–∞ ${bukashkaName} –Ω–∞—à–ª–∞ –∏ —Å—ä–µ–ª–∞ —è–±–ª–æ—á–∫–æ! üçé\n–°—ã—Ç–æ—Å—Ç—å —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å –Ω–∞ 20 üå±\n–°—á–∞—Å—Ç—å–µ —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –Ω–∞ 15 üòä\n\n–í–∞—à–∞ –±—É–∫–∞—à–∫–∞ –æ—á–µ–Ω—å —Å—á–∞—Å—Ç–ª–∏–≤–∞! üíñ`),
    };
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∫–æ–º–∞–Ω–¥—ã
const normalizeCommand = (text) => {
  // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫—Ä–æ–º–µ –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ –ø—Ä–æ–±–µ–ª–æ–≤, –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
  return text.toLowerCase().replace(/[^–∞-—è—ëa-z0-9\s]/gi, '').trim();
};

module.exports = {
  formatTimeLeft,
  escapeMarkdown,
  formatMessage,
  formatBukashkaInfo,
  sendBukashkaInfo,
  calculateAge,
  getFeedResult,
  normalizeCommand
};
